{"version":3,"sources":["components/dice/index.js","components/DiceSet/index.js","components/DiceRoller/index.js","components/YellowField/index.js","components/BlueField/index.js","components/GreenField/index.js","components/OrangeField/index.js","components/PurpleField/index.js","components/GameCard/index.js","App.js","reportWebVitals.js","index.js"],"names":["DiceElement","props","diceSelect","e","console","log","target","getAttribute","diceResult","onClick","dicenumber","className","style","backgroundColor","bgColor","DiceSet","useState","rolled","Row","map","item","Col","Math","floor","random","DiceRoller","isRolled","setIsRolled","useEffect","Card","width","Body","Title","Button","YellowField","Container","borderColor","borderWidth","xs","sm","md","lg","xl","xxl","BlueField","GreenField","OrangeField","PurpleField","GameCard","background","App","Jumbotron","fluid","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d810da4.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction DiceElement(props){\n\n    function diceSelect(e){\n        console.log(e.target.getAttribute(\"dicenumber\"))\n    }\n\n    return (\n        <>\n           \n                { props.diceResult === 1\n                \n                ? \n                    <div onClick={diceSelect} dicenumber={1} className=\"dice first-face\" style={{backgroundColor: props.bgColor}}>\n                        <span className=\"dot\"></span>\n                    </div>\n\n                : props.diceResult === 2 \n                \n                ?\n                    <div onClick={diceSelect} dicenumber={2} className=\"dice second-face\" style={{backgroundColor: props.bgColor}}>\n                        <span className=\"dot\"></span>\n                        <span className=\"dot\"></span>\n                    </div>\n\n                : props.diceResult === 3\n\n                ?\n                \n                    <div onClick={diceSelect} dicenumber={3} className=\"dice third-face\" style={{backgroundColor: props.bgColor}}>\n                        <span className=\"dot\"></span>\n                        <span className=\"dot\"></span>\n                        <span className=\"dot\"></span>\n                    </div>\n\n                : props.diceResult === 4\n\n                ?\n                \n                    <div onClick={diceSelect} dicenumber={4} className=\"dice fourth-face\" style={{backgroundColor: props.bgColor}}>\n                        <div className=\"column\">\n                            <span className=\"dot\"></span>\n                            <span className=\"dot\"></span>\n                        </div>\n\n                        <div className=\"column\">\n                            <span className=\"dot\"></span>\n                            <span className=\"dot\"></span>\n                        </div>\n                    </div>\n\n                : props.diceResult === 5\n\n                ?\n               \n                    <div onClick={diceSelect} dicenumber={5} className=\"dice fifth-face\" style={{backgroundColor: props.bgColor}}>\n                        <div className=\"column\">\n                            <span className=\"dot\"></span>\n                            <span className=\"dot\"></span>\n                        </div>\n\n                        <div className=\"column\">\n                            <span className=\"dot\"></span>\n                        </div>\n\n                        <div className=\"column\">\n                            <span className=\"dot\"></span>\n                            <span className=\"dot\"></span>\n                        </div>\n                    </div>\n\n                : props.diceResult === 6\n\n                &&\n                \n                   \n                    <div onClick={diceSelect} dicenumber={6} className=\"dice sixth-face\" style={{backgroundColor: props.bgColor}}>\n                        <div className=\"column\">\n                            <span className=\"dot\"></span>\n                            <span  className=\"dot\"></span>\n                            <span  className=\"dot\"></span>\n                        </div>\n\n                        <div className=\"column\">\n                            <span className=\"dot\"></span>\n                            <span className=\"dot\"></span>\n                            <span className=\"dot\"></span>\n                        </div>\n\n                        \n                    </div>\n                  \n                \n                    }\n\n        </>\n    )\n}\n\nexport default DiceElement","import React, {useState} from \"react\";\nimport Dice from \"../dice\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nfunction DiceSet(props){\n\n\n    const dices = [\"Yellow\", \"Blue\", \"White\", \"Green\", \"Orange\", \"Purple\"]\n    const [selectedDice, setSelectedDice] = useState()\n\n    \n    \n    return (\n        <>\n            { props.rolled \n             && \n            <Row>\n                {dices.map(item =>\n                    \n                    <Col key={item}>\n                        <Dice diceResult={Math.floor(Math.random() * 6) + 1} bgColor={item}/>\n                    </Col>\n\n                    )}\n                </Row>\n            \n}\n        </>\n    )\n}\n\nexport default DiceSet","import React, {useState, useEffect} from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport DiceSet from \"../DiceSet\";\nimport Button from \"react-bootstrap/Button\"\n\nfunction DiceRoller(){\n    const [isRolled, setIsRolled] = useState(true)\n\n    function rollTheDie(){\n        setIsRolled(false)\n        \n    }\n    \n    useEffect(() =>{\n        if(isRolled === false){\n            setIsRolled(true)\n        }\n    }) \n\n    return(\n        <>\n            \n            <Card style={{width: \"18rem\"}}>\n                <Card.Body>\n                    <Card.Title className=\"d-flex justify-content-center\">How Clever Are You?</Card.Title>\n                        <DiceSet rolled={isRolled} />\n                    <div className=\"d-flex justify-content-center\">\n                        <Button className=\"mt-2\" onClick={rollTheDie}>Roll Dice</Button>\n                    </div>\n\n                </Card.Body>\n            </Card>\n                        \n\n        </>\n    )\n}\n\nexport default DiceRoller\n\n","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\n\nfunction YellowField(){\n\n    const YellowChoices = [3, 6, 5, \"X\", 2, 1, \"X\", 5, 1, \"X\", 2, 4, \"X\", 3, 4, 6];\n\n\n    return(\n        <>\n            <Container className=\"mt-3\">\n                <Card style={{width: \"18rem\", borderColor: \"#ffd900\", borderWidth: \"3px\"}}>\n                    <Row>\n                        {YellowChoices.map(item =>{\n                            return(\n                            <Col xs={3} sm={3} md={3} lg={3} xl={3} xxl={3} key={item}>\n                               <div className=\"gameSquare d-flex justify-content-center\">\n                                {item}\n                               </div>\n                                \n                            </Col>\n                            )\n                        })}\n                    </Row>\n                </Card>\n            </Container>\n        </>\n    )\n}\n\nexport default YellowField","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\n\nfunction BlueField(){\n\n    const BlueChoices = [\"x\", 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\n\n    return(\n        <>\n            <Container className=\"mt-3\">\n                <Card style={{width: \"18rem\", borderColor: \"#0af\", borderWidth: \"3px\"}}>\n                    <Row>\n                        {BlueChoices.map(item =>{\n                            return(\n                            <Col xs={3} sm={3} md={3} lg={3} xl={3} xxl={3} key={item}>\n                               <div className=\"gameSquare d-flex justify-content-center\">\n                                {item}\n                               </div>\n                                \n                            </Col>\n                            )\n                        })}\n                    </Row>\n                </Card>\n            </Container>\n        </>\n    )\n}\n\nexport default BlueField","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\n\nfunction GreenField(){\n\n    const GreenSquares = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n\n    return(\n        <>\n            <Container className=\"mt-3\">\n                <Card style={{borderColor: \"green\", borderWidth: \"3px\"}}>\n                    <Row>\n                        <Col className=\"d-flex justify-content-evenly\">                        \n                            {GreenSquares.map(item => {\n                                return(\n                                   <>\n                                    <div key={item} className=\"gameSquare\">{item}</div>\n                                    <div className=\"align-self-center\">≥</div>\n                                    </>\n                                   \n                                )\n                            })}\n                        </Col>\n\n                    </Row>\n\n                </Card>\n            </Container>\n        </>\n    )\n}\n\nexport default GreenField","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\n\nfunction OrangeField(){\n    const OrangeSquares = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n\n    return(\n        <>\n            <Container className=\"mt-3\">\n                <Card style={{borderColor: \"orange\", borderWidth: \"3px\"}}>\n                    <Row>\n                        <Col className=\"d-flex justify-content-evenly\">                        \n                            {OrangeSquares.map(item => {\n                                return(\n                                   <>\n                                    <div key={item} className=\"gameSquare\"></div>\n                                    </>\n                                   \n                                )\n                            })}\n                        </Col>\n\n                    </Row>\n\n                </Card>\n            </Container>\n        </>\n    )\n}\n\nexport default OrangeField","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\n\nfunction PurpleField(){\n\n    const PurpleSquares = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n\n    return(\n        <>\n            <Container className=\"mt-3\">\n                <Card style={{borderColor: \"purple\", borderWidth: \"3px\"}}>\n                    <Row>\n                        <Col className=\"d-flex justify-content-evenly\">                        \n                            {PurpleSquares.map(item => {\n                                return(\n                                   <>\n                                    <div key={item} className=\"gameSquare\"></div>\n                                   \n    \n                                    <div className=\"align-self-center\">></div>\n                                        \n                                    \n                                    </>\n                                    \n                                   \n                                )\n                                \n                            })}\n                            \n                        </Col>\n\n                    </Row>\n\n                </Card>\n            </Container>\n        </>\n    )\n}\n\nexport default PurpleField","import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Card from \"react-bootstrap/Card\"\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport DiceRoller from \"../DiceRoller\"\nimport YellowField from \"../YellowField\";\nimport BlueField from \"../BlueField\";\nimport GreenField from \"../GreenField\"\nimport OrangeField from \"../OrangeField\"\nimport PurpleField from \"../PurpleField\";\n\n\nfunction GameCard(){   \n\n    return (\n        <>\n            <Container className=\"d-flex justify-content-center mt-5\" >\n                <Card style={{background: \"rgba(255, 255, 255, 0.25)\"}}>\n\n                \n                <Row className=\"mt-5 mb-5\">\n                    <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12} className=\"d-flex justify-content-center\" >\n                                <DiceRoller />\n                    </Col>\n\n                    <Col xs={6} sm={6} md={6} lg={6} xl={6} xxl={6}>\n                    \n                                <YellowField />\n                    </Col>\n\n                    <Col xs={6} sm={6} md={6} lg={6} xl={6} xxl={6}>\n                    \n                                <BlueField />\n                    </Col>\n                    <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\n                    \n                                <GreenField />\n                    </Col>\n                    <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\n                    \n                                <OrangeField />\n                    </Col>\n                    <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\n                    \n                                <PurpleField />\n                    </Col>\n\n                </Row>\n                </Card>\n            </Container>\n        </>\n    )\n}\n\nexport default GameCard","import './App.css'; \nimport 'bootstrap/dist/css/bootstrap.min.css'; \nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport GameCard from \"./components/GameCard\"\n\n\nfunction App() {\n  return (\n    <div>\n      <Jumbotron fluid className=\"d-flex justify-content-center\">\n        <h1 style={{color: \"white\"}}>Clever Game</h1>\n      </Jumbotron>\n        <GameCard />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}